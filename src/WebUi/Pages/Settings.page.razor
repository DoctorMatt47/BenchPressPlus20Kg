@page "/settings"
@using System.Text.Json
@using WebUi.Services

@inject NavigationManager NavigationManager
@inject LocalStoragePlanRepository Repository
@inject IPlanService PlanService

<PageTitle>Settings</PageTitle>


<div class="flex h-screen">
    <div class="mx-2 p-4 bg-slate-800 border-2 border-slate-600 rounded text-center my-auto">
        <div class="grid grid-rows-3 gap-2">
            <div class="columns-2">
                <div>
                    <label for="unit"> Unit: </label>
                </div>
                <div>
                    <select id="unit" class="bg-slate-400 rounded w-full text-slate-950" @onchange="SetUnit">
                        <option value="Kg">kg</option>
                        <option value="Lb">lb</option>
                    </select>
                </div>
            </div>
            <div class="columns-2">
                <div>
                    <label for="orm"> ORM: </label>
                </div>
                <div>
                    <input id="orm" type="number" class="bg-slate-400 rounded text-slate-950" value="100" @onchange="SetOrm"/>
                </div>
            </div>
            <div>
                <button class="p-2 w-full bg-slate-300 rounded text-slate-950" @onclick="GeneratePlan">
                    Generate
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private decimal _orm = 100;
    private Weight.Unit _unit = Weight.Unit.Kg;

    private void SetUnit(ChangeEventArgs e)
    {
        if (Enum.TryParse<Weight.Unit>(e.Value?.ToString(), out var unit))
        {
            _unit = unit;
        }
    }

    private void SetOrm(ChangeEventArgs e)
    {
        if (decimal.TryParse(e.Value!.ToString(), out var orm))
        {
            _orm = orm;
        }
    }

    private async Task GeneratePlan()
    {
        await Repository.SaveUnit(_unit);
        await PlanService.CreatePlan(Weight.FromUnit(_orm, _unit));
        NavigationManager.NavigateTo("./plan");
    }

}
